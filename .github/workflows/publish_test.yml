name: Test Publish ChillBoss

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Configure poetry environment
        shell: bash
        run: |
          python -m pip install poetry
          echo The Poetry version installed is `poetry --version`
          python -m poetry config virtualenvs.in-project true

      - name: Check for valid pyproject.toml
        shell: bash
        run: poetry check

      - name: Install dependencies
        shell: bash
        run: python -m poetry install


      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics


      - name: Test using Pytest
        shell: bash
        run: poetry run pytest -v tests

  Publish:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure poetry environment
        shell: bash
        run: |
          python -m pip install poetry
          echo The Poetry version installed is `poetry --version`
          python -m poetry config virtualenvs.in-project true

      - name: Check for valid pyproject.toml
        shell: bash
        run: poetry check

      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Publish to Test PyPI
        shell: bash
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.pypi ${{ secrets.TEST_PYPI }}
          poetry publish -r testpypi
